OS T5 Lab 1 M. Taimoor Azim Ansari / ma075951. A shell is a command-line interface (CLI) program that provides a text-based way for users to interact with an operating system. It interprets user commands and communicates with the operating system to execute those commands.2. My shell is bash. 
Command: [Macbooks-MacBook-Pro-3:~ macbook$ echo $SHELL Output: /bin/bash3. A Home Directory, also known as a user's home folder or home directory, is a directory in a file system that is designated for a particular user. It is the default location where a user's personal files and settings are stored.4. My home directory is /Users/macbook.Command: [Macbooks-MacBook-Pro-3:~ macbook$ echo $HOMEOutput: /Users/macbook5. Working Directory, also known as the current working directory, is the directory within the file system where the user is currently located or working. 6. Current working directory is /Users/macbook. Command: [Macbooks-MacBook-Pro-3:~ macbook$ pwdOutput: /Users/macbook7. My username is macbook. Command: [Macbooks-MacBook-Pro-3:~ macbook$ whoamiOutput: macbook8. A path is a reference to a file or directory's location within a file system. It specifies the route to a particular file or directory, allowing you to navigate and locate resources.9. An absolute path provides the full and complete location of a file or directory from the root of the file system.10. A relative path specifies the location of a file or directory relative to the current working directory. It doesn't start from the root directory but rather describes the path relative to your current location.11. There are many more files and folders, but for the sake of submission attaching a handful. Command: Macbooks-MacBook-Pro-3:~ macbook$ ls -l /usr/bin/Output: total 162920-rwxr-xr-x   1 root   wheel    204592 Jun 15 15:08 AssetCacheLocatorUtil-rwxr-xr-x   1 root   wheel    227440 Jun 15 15:08 AssetCacheManagerUtil-rwxr-xr-x   1 root   wheel    205696 Jun 15 15:08 AssetCacheTetheratorUtil-rwxr-xr-x  76 root   wheel    167136 Jun 15 15:08 DeRez-rwxr-xr-x  76 root   wheel    167136 Jun 15 15:08 GetFileInfo-rwxr-xr-x   1 root   wheel    256544 Jun 15 15:08 IOAccelMemory-rwxr-xr-x   1 root   wheel    161008 Jun 15 15:08 IOMFB_FDR_Loader-rwxr-xr-x   1 root   wheel    203040 Jun 15 15:08 IOSDebug-rwxr-xr-x  76 root   wheel    167136 Jun 15 15:08 ResMerger-rwxr-xr-x  76 root   wheel    167136 Jun 15 15:08 Rez-rwxr-xr-x   1 root   wheel    168800 Jun 15 15:08 SafeEjectGPU-rwxr-xr-x  76 root   wheel    167136 Jun 15 15:08 SetFile-rwxr-xr-x  76 root   wheel    167136 Jun 15 15:08 SplitForks-rwxr-xr-x   1 root   wheel    344960 Jun 15 15:08 aa-rwxr-xr-x  16 root   wheel    167088 Jun 15 15:08 actool-rwxr-xr-x   1 root   wheel    237648 Jun 15 15:08 aea-rwxr-xr-x   1 root   wheel    204112 Jun 15 15:08 afclip-rwxr-xr-x   1 root   wheel    376928 Jun 15 15:08 afconvert-rwxr-xr-x   1 root   wheel    168672 Jun 15 15:08 afhash-rwxr-xr-x   1 root   wheel    236464 Jun 15 15:08 afida-rwxr-xr-x   1 root   wheel    240896 Jun 15 15:08 afinfo12. The largest file in my /usr/bin directory is: 4.6M	/usr/bin/parl5.3013. Command:        Ls -tc /usr/bin | head -n 1      Output:       AssetCacheLocatorUtil14. Command:Cd $HOMEls -d */Output:Applications/		Movies/			Public/			github-classroom/Desktop/		Music/			dir1/			nltk_data/Documents/		My project/		dir2/			node_modules/Downloads/		Pictures/		dir3/Library/		Projects/		dir9/15. Command: Cd $HOMEls -aOutput:.				.idlerc				Movies..				.lesshst			Music.CFUserTextEncoding		.local				My project.DS_Store			.mono				Pictures.IdentityService		.ms_openjdk_config		Projects.Trash				.npm				Public.android			.npmrc				dir1.aspnet				.nuget				dir2.azuredatastudio		.omnisharp			dir3.bash_history			.plastic4			dir9.bash_profile			.react-native-cli		github-classroom.bash_sessions			.swiftpm			java_error_in_studio_3940.log.bundle				.templateengine			java_error_in_studio_4069.log.cache				.viminfo			java_error_in_studio_4136.log.cocoapods			.vscode				java_error_in_studio_4286.log.config				.zprofile			java_error_in_studio_4354.log.docker				.zsh_history			java_error_in_studio_4440.log.dotnet				.zsh_sessions			java_error_in_studio_779.log.emulator_console_auth_token	Applications			java_error_in_studio_919.log.gem				Desktop				nltk_data.gitconfig			Documents			node_modules.gradle				Downloads			package-lock.json16. he file command is used to determine the file type of a specified file. For example, it can identify whether a file is a text file, an image, an executable program, etc.17. The ls command has various options. You can view them by running man ls to access the manual page for ls, which lists all available options and their descriptions Command: man lsOutput:LS(1)                                General Commands Manual                               LS(1)NAME -@      Display extended attribute keys and sizes in long (-l) output.     ls Ð list directory contents     -A      Include directory entries whose names begin with a dot (Ô.Õ) except for . and ...SYNOPSIS     ls [-@ABCFGHILOPRSTUWabcdefghiklmnopqrstuvwxy1%,] [--color=when] [-D format] [file ...]DESCRIPTION     For each operand that names a file of a type other than directory, ls displays its name as     well as any requested, associated information.  For each operand that names a file of type     directory, ls displays the names of files contained within that directory, as well as any     requested, associated information.     If no operands are given, the contents of the current directory are displayed.  If more     than one operand is given, non-directory operands are displayed first; directory and non-     directory operands are sorted separately and in lexicographical order.     The following options are available:     -@      Display extended attribute keys and sizes in long (-l) output.     -A      Include directory entries whose names begin with a dot (Ô.Õ) except for . and ...             Automatically set for the super-user unless -I is specified.     -B      Force printing of non-printable characters (as defined by ctype(3) and current             locale settings) in file names as \xxx, where xxx is the numeric value of the             character in octal.  This option is not defined in IEEE Std 1003.1-2008             (ÒPOSIX.1Ó).     -C      Force multi-column output; this is the default when output is to a terminal.     -D format             When printing in the long (-l) format, use format to format the date and time             output.  The argument format is a string used by strftime(3).  Depending on the             choice of format string, this may result in a different number of columns in the             output.  This option overrides the -T option.  This option is not defined in IEEE             Std 1003.1-2008 (ÒPOSIX.1Ó).     -F      Display a slash (Ô/Õ) immediately after each pathname that is a directory, an             asterisk (Ô*Õ) after each that is executable, an at sign (Ô@Õ) after each symbolic             link, an equals sign (Ô=Õ) after each socket, a percent sign (Ô%Õ) after each             whiteout, and a vertical bar (Ô|Õ) after each that is a FIFO.     -G      Enable colorized output.  This option is equivalent to defining CLICOLOR or             COLORTERM in the environment and setting --color=auto.  (See below.)  This             functionality can be compiled out by removing the definition of COLORLS.  This             option is not defined in IEEE Std 1003.1-2008 (ÒPOSIX.1Ó).18. he -h option for ls is used to make the file sizes more human-readable. Here's how to use it: Command:  ls -lhOutput:total 1904drwx------@   3 macbook  staff    96B Mar 22  2022 Applicationsdrwx------@  42 macbook  staff   1.3K Aug 29 19:41 Desktopdrwx------+   4 macbook  staff   128B Aug  5  2022 Documentsdrwx------@  44 macbook  staff   1.4K Aug 28 00:15 Downloadsdrwx------@ 103 macbook  staff   3.2K Jun 19 02:01 Librarydrwx------    4 macbook  staff   128B Aug  6  2022 Movies
.
.
.
19. Command:mkdir $HOME/{dir1,dir2, dir3}20. Command:mkdir -p $HOME/dir9/subdir8/subsubdir721. touch $HOME/dir9/subdir8/subsubdir7/dummy.txt22. cp /usr/bin/{zip,zipgrep,zipinfo} $HOME/dir9/subdir8/subsubdir7/23. mv $HOME/dir9/subdir8/subsubdir7/zipgrep $HOME/dir9/subdir8/24. mv $HOME/dir9/subdir8/zipgrep $HOME/dir9/subdir8/myzipgrep25. mv $HOME/dir9/subdir8/subsubdir7/* $HOME/dir9/subdir8/26. rm -r $HOME/dir9/subdir827. Command: ls /usr/bin/z*Output:/usr/bin/zcat		/usr/bin/zforce		/usr/bin/zipdetails5.30	/usr/bin/zipsplit/usr/bin/zcmp		/usr/bin/zgrep		/usr/bin/zipdetails5.34	/usr/bin/zless/usr/bin/zdiff		/usr/bin/zip		/usr/bin/zipgrep	/usr/bin/zmore/usr/bin/zegrep		/usr/bin/zipcloak	/usr/bin/zipinfo	/usr/bin/znew/usr/bin/zfgrep		/usr/bin/zipdetails	/usr/bin/zipnote	/usr/bin/zprint28. Command: ls /etc/?c*Output:/etc/rc.common  /etc/rc.netboot29. cp /usr/bin/z* $HOME/dir9/subdir8/30. find $HOME/dir9/subdir8/ -type f -name '*[0-9]*' -exec rm {} \;